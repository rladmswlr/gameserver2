// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId Int @id @default(autoincrement()) @map("userId")
  id String @unique @map("id")
  password String @map("password")
  passwordCheck String? @map("passwordCheck")
  name String @map("name")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime  @updatedAt @map("updatedAt")

  Characters Characters[]  //한명의 사용자는 여러개의 캐릭터를 가질 수 있다.

  @@map("Users")
}

model Characters {
  characterId Int @id @default(autoincrement()) @map("characterId")
  UserId Int @unique @map("UserId")
  name String @unique @map("name")
  health Int @map("health")
  power Int @map("power")
  money Int @map("money")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime  @updatedAt @map("updatedAt")

  // Users 테이블과 관계를 설정합니다.
  User Users @relation(fields: [UserId], references: [userId], onDelete: Cascade)

  @@map("Characters")
}